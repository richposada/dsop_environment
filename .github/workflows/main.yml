name: Deploy RKE2 & Big Bang

on:
  push:
    paths:
      - 'config.json'
  workflow_dispatch:

jobs:
  deploy-rke2:
    runs-on: ubuntu-latest
    outputs:
      kvname: ${{ steps.deploy_rke2.outputs.kvname }}

    steps:
      - uses: actions/checkout@v2
      - name: Use branch name as cluster name if unchanged
        run: |
          CLUSTER=$(basename $GITHUB_REF_NAME)
          ESC_CLUSTER=$(printf '%s\n' "$CLUSTER" | sed -e 's/[\/&]/\\&/g')
          sed -i config.json -e "s/__CHANGEME__CLUSTERNAME__/${ESC_CLUSTER}/g"     
      - name: Deploy RKE2
        id: deploy_rke2
        uses: addnab/docker-run-action@v3
        with:
          image: shuffereu/dsopbuilder:latest
          options: -v /home/runner/work/dsop-environment/dsop-environment:/transfer
          shell: bash
          run: | 
            cp -f /transfer/config.json config/config.json
            
            export ARM_TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .tenantId | tr -d '"')
            export ARM_CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .clientId | tr -d '"')
            export ARM_CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .clientSecret | tr -d '"')
            export ARM_SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq .subscriptionId | tr -d '"')
            export ARM_ENVIRONMENT=usgovernment

            az cloud set --name AzureUSGovernment
            az login --service-principal -u "${ARM_CLIENT_ID}" -p "${ARM_CLIENT_SECRET}" --tenant "${ARM_TENANT_ID}"

            python3 main.py settings --help
            python3 main.py settings validate
            python3 main.py settings list
            yes 2> /dev/null | python3 main.py rke2 apply --project ${{ github.run_number }}
            cd /PyBuilder/working/dsop_rke2/${{ github.run_number }}
            
            DIRECTORY=$(dirname $0)

            KV_NAME=${1:-$(terraform output -raw kv_name)}
           
            echo "::set-output name=kvname::$KV_NAME"

  deploy-bigbang:
    runs-on: ubuntu-latest
    needs: deploy-rke2
    env:
      #TODO Need to update this
      KUBECONFIG: /home/runner/work/dsop-environment/dsop-environment/rke2.kubeconfig
    steps:
      - name: Login to Azure US Gov Cloud with CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: 'AzureUSGovernment'
          enable-AzPSSession: false

      - uses: actions/checkout@v3

      - name: checkout tools-install repo
        uses: actions/checkout@v3
        with:
          repository: benc-uk/tools-install
          path: tools-install

      - name: bootstrap local tools
        shell: bash
        run: |
          chmod +x tools-install/**.sh
          echo $HOME

          mkdir -p $HOME/.local/bin
          ls -la $HOME/.local/bin         

          cd tools-install
          ./base.sh
          ./sops.sh
          #./kustomize.sh

          # ls -la $HOME/.local/bin
          echo $PATH

      - name: create ISTIO certs
        continue-on-error: true
        env:
          KV_NAME: ${{ needs.deploy-rke2.outputs.kvname }}
          HOSTNAME: bigbang.dev
        run: |
          ## Create Certs
          chmod +x scripts/**.sh
          ./scripts/create-root-cert.sh
          ./scripts/create-domain-cert.sh $HOSTNAME
          ISTIO_GW_CRT=$(cat $HOSTNAME.crt | base64 -w0)
          ISTIO_GW_KEY=$(cat $HOSTNAME.key | base64 -w0)

          ## TODO: What to do with ca.crt and ca.key

          ## Store in AKV as secrets
          az keyvault secret set --name istio-gw-crt --vault-name $KV_NAME --encoding base64 --value "$ISTIO_GW_CRT" > /dev/null
          az keyvault secret set --name istio-gw-key --vault-name $KV_NAME --encoding base64 --value "$ISTIO_GW_KEY" > /dev/null

      - name: update dev bigbang.yaml file
        continue-on-error: true
        shell: bash
        run : |
          ./scripts/reset.sh
          ./scripts/update-bigbang-yaml.sh dev ${{ github.repository }} $GITHUB_REF_NAME

          ## check in change
          git config --global user.email "no-reply@github-runner.com"
          git config --global user.name  "GitHub Runner"
          git add dev/bigbang.yaml
          git commit -m "updated dev/bigbang.yaml"
          git push

      - name: modify secrets.sh
        shell: bash
        env:
          KV_NAME: ${{ needs.deploy-rke2.outputs.kvname }}
        run : |
          echo "modify secrets.sh"

          cat << EOF > scripts/secrets.sh
          export IRON_BANK_USER="${{ secrets.IRON_BANK_USER }}"
          export IRON_BANK_PAT="${{ secrets.IRON_BANK_PAT }}"
          export AZDO_USER="timothymeyers"
          export AZDO_PASSWORD="${{ secrets.GH_PAT }}"
          export ISTIO_GW_CRT=https://${KV_NAME}.vault.usgovcloudapi.net/secrets/istio-gw-crt
          export ISTIO_GW_KEY=https://${KV_NAME}.vault.usgovcloudapi.net/secrets/istio-gw-key
          EOF
          chmod +x scripts/secrets.sh
        
      - name: prepare deploy-vars.sh
        shell: bash
        run: cp scripts/deploy-vars.sh.sample scripts/deploy-vars.sh && chmod +x scripts/deploy-vars.sh

      #- run: sleep 60

      - name: set kubeconfig
        env:
          KV_NAME: ${{ needs.deploy-rke2.outputs.kvname }}
        run: |          
          FILE=$(realpath rke2.kubeconfig)
          echo "Fetching kubeconfig from KeyVault $KV_NAME"
          az keyvault secret show --name kubeconfig --vault-name $KV_NAME -o json | jq -r '.value' > $FILE

          ls -la $FILE

          until kubectl version &> /dev/null
          do
            echo "Waiting for k8s server to respond..."
            sleep 10
          done
          
          kubectl version
          
          
      - name: get nodes and pods
        shell: bash
        run: |
          kubectl get nodes -A
          kubectl get pods -A

      - name: deploy big bang
        shell: bash
        run: |
          kubectl version
          kubectl get nodes -A

          cd scripts/
          chmod +x deploy.sh
          #yes 2> /dev/null | ./deploy.sh
          
          ./deploy.sh < <(yes)

          echo $?
          echo "All Done!"


  verify-reconciliation:
    runs-on: ubuntu-latest
    needs: [deploy-rke2, deploy-bigbang]
    env:
      #TODO Need to update this
      KUBECONFIG: /home/runner/work/dsop-environment/dsop-environment/rke2.kubeconfig
    steps:
      - name: Login to Azure US Gov Cloud with CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: 'AzureUSGovernment'
          enable-AzPSSession: false
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          cache: pip
      - run: pip install -r requirements.txt      
      - name: set kubeconfig
        env:
          KV_NAME: ${{ needs.deploy-rke2.outputs.kvname }}
        run: |          
          FILE=$(realpath rke2.kubeconfig)
          echo "Fetching kubeconfig from KeyVault $KV_NAME"
          az keyvault secret show --name kubeconfig --vault-name $KV_NAME -o json | jq -r '.value' > $FILE

          ls -la $FILE

          until kubectl version &> /dev/null
          do
            echo "Waiting for k8s server to respond..."
            sleep 10
          done
          
          kubectl version

      - name: Execute Pytest
        run: |
          
          until pytest -v tests/ &> /dev/null
          do
            echo "Waiting for reconciliation to complete..."
            kubectl get gitrepositories,ks,hr -A
            sleep 300
          done

          pytest -v tests/
